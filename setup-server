#!/bin/bash

if [[ $UID != 0 ]]; then
    echo "Please run this script with sudo:"
    echo "sudo $0 $*"
    exit 1
fi

# make sure we're in the directory containing the other scripts
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
cd $DIR

# first add files to the /etc/skel directory. .vimrc, Edit default umask
echo "Before doing this, make sure you've added/edited the necessary files to the /etc/skel directory. E.g., .vimrc, edit the umask to 077 in .profile. Press Enter to continue."
read -n 1

# add {teacher, bot, student} groups
getent group teacher || groupadd teacher
getent group bot || groupadd bot
getent group student || groupadd student

# add users {lawtonnichols, autograder, test_student}
useradd -m -N -g teacher -G sudo -s /bin/bash -c "Lawton Nichols" -K UID_MIN=1000 -K UID_MAX=1999 -K UMASK=077 lawtonnichols
useradd -m -N -g bot -s /bin/bash -c "Autograder" -K UID_MIN=1000 -K UID_MAX=1999 -K UMASK=077 autograder
useradd -m -N -g student -s /bin/bash -c "Test Student" -K UID_MIN=2000 -K UMASK=077 test_student

usermod -a -G sudo lawtonnichols

# echo -e "linuxpassword\nlinuxpassword" | passwd linuxuser
passwd lawtonnichols
passwd autograder
passwd test_student

# update the system
apt update
apt upgrade

# install required packages

PACKAGES=build-essential make gcc g++ gdb clang clang++ clang-format vim emacs python3 python3-pip idle3 git default-jdk docker quota

apt install $PACKAGES

pip3 install Pillow

# configure quotas
# https://www.tecmint.com/set-filesystem-disk-quotas-on-ubuntu/
# https://www.digitalocean.com/community/tutorials/how-to-enable-user-and-group-quotas
  # if your system support -p option of edquota then I think it is what you need.
  # Create prototype user, set up quota, then just run
  # edquota -p prototypeuser targetuser
echo -e "We're about to edit /etc/fstab for quotas---you need to add \",usrquota\". Press Enter to continue."
read -n 1
nano /etc/fstab
mount -o remount /
quotacheck -cum /
quotaon /

echo "Setting the quota for test_student."
setquota -u test_student 100M 110M 0 0 /
quota -vs test_student

echo "Now you should be able to move this folder to your own home folder."