#!/usr/bin/env python3

import json, sys

with open(sys.argv[1]) as f:
    score = json.load(f)

total_score = 0
total_points_possible = 0
for part in score['parts']:
    total_score += part['score']
    total_points_possible += part['points_possible']

print('<!doctype html>')
print('<html>')
print('<head>')
print('<meta charset="UTF-8">')
print('<script src="https://cdnjs.cloudflare.com/ajax/libs/jsdiff/5.0.0/diff.min.js" integrity="sha512-Rjml7/E2zETyVFhzIQnTEjW7PBCH5/Y4ac2uu9MGqh1JclCVHbvT1lIlcVmvAGFipi/L16eA6Jr9km2zit9Tfg==" crossorigin="anonymous"></script>')
print('<script src="https://cdnjs.cloudflare.com/ajax/libs/diff2html/2.12.2/diff2html.min.js" integrity="sha512-8cdb9zL6w8Wyo/efaAxbcA7Gh+lJglOQvChN0clQ7bZQ4BaV5RgBGavSa1pUhVkcWlalyttHMhxPPf9koYmJNw==" crossorigin="anonymous"></script>')
print('<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/diff2html/bundles/css/diff2html.min.css" />')
print('<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">')
print('<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous"></script>')

user = score['user']

whichclass = score['class']

assignment = score['assignment']

print('<title>{}: {}</title>'.format(whichclass, assignment))
print('</head>')
print('<body>')

print('<h1>{}: {}</h1>'.format(whichclass, assignment))

# curse my typos
submitted_date = ""
if 'submitted_date' in score:
    submitted_date = score['submitted_date']
else:
    submitted_date = score['submited_date']

print('<strong>Submitted by:</strong> {}<br>'.format(user))
print('<strong>Submission Date/Time:</strong> {}<br>'.format(submitted_date))
print('<strong>Total Score:</strong> {}<br>'.format(total_score))
print('<strong>Total Points Possible:</strong> {}<br>'.format(total_points_possible))

        #print('\n'.join(map(lambda x: '  ' + x, part['comments'].split('\n'))))

def render_comments(comments_str):
    comments_lines = comments_str.split('\n')
    if "Your output:" in comments_lines:
        # diff
        # find the student_output
        student_output = []
        i = 0
        while comments_lines[i] != "Your output:":
            i += 1
        # eat the ---
        i += 2
        # eat until closing ---
        while comments_lines[i] != "---":
            student_output += [comments_lines[i]]
            i += 1

        # find the expected_output
        expected_output = []
        i = 0
        while comments_lines[i] != "Expected output:":
            i += 1
        # eat the ---
        i += 2
        # eat until closing ---
        while comments_lines[i] != "---":
            expected_output += [comments_lines[i]]
            i += 1

        student_output = '\n'.join(student_output)
        expected_output = '\n'.join(expected_output)

        # https://stackoverflow.com/questions/54826435/create-unified-diff-text-for-diff2html-in-browser
        script = '''
        <script>
        var student_output = {};
        var expected_output = {};
        var diff = Diff.createTwoFilesPatch("Your Output", "Expected Output", student_output, expected_output);
        var html = Diff2Html.getPrettyHtml(diff,
                     {{inputFormat: 'diff', showFiles: false, matching: 'lines', outputFormat: 'side-by-side'}}
                   );
        document.write(html);
        </script>
        '''.format(json.dumps(student_output), json.dumps(expected_output))

        return script
    else:
        # normal text
        return "<pre>\n{}\n</pre>".format(comments_str)

print('<hr>')
print()

for part in score['parts']:
    print('<h2>', part['part'], '</h2>', sep='')
    print('<h4><strong>Score for this part:</strong> {} / {}</h4>'.format(part['score'], part['points_possible']))
    print('<h4><strong>Autograder output for this part:</strong></h4>')
    if len(part['comments']) > 0:
        print(render_comments(part['comments']))
    else:
        print('<em>No output</em>')
    print()
    print('<hr>')
    print()

print('</body>')
print('</html>')
